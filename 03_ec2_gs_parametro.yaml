AWSTemplateFormatVersion: "2010-09-09"
Description: "Plantilla para crear una instancia EC2 sin parámetros"

Parameters:
  ImageId:
    Type: String
    Default: "ami-0c02fb55956c7d316"
    Description: "ID de la imagen AMI para la instancia EC2"
    AllowedValues:
      - "ami-0c02fb55956c7d316"  # Amazon Linux 2
      - "ami-0d8f6eb4f641ef691"  # Ubuntu Server 20.04 LTS
      - "ami-0a91cd140a1fc148a"  # Red Hat Enterprise Linux 8
    ConstraintDescription: "Debe ser una de las AMIs permitidas: Amazon Linux 2, Ubuntu Server 20.04 LTS o Red Hat Enterprise Linux 8."

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "11.3.0.0/20"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "VPC-Ivan"
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC-Ivan
      CidrBlock: "11.3.0.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Key: "Name"
          Value: "MyPublicSubnet"

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      KeyName: "vockey"
      ImageId: !Ref ImageId  # Usar el parámetro ImageId
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: !Ref MyPublicSubnet
      PrivateIpAddress: "10.0.0.10/24"
  
  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Permitir acceso SSH"
      VpcId: !Ref VPC-Ivan
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"  # Cambia esto para restringir acceso si es necesario
        - IpProtocol: "tcp"
          FromPort: 20
          ToPort: 20
          CidrIp: "0.0.0.0/0"  # Cambia esto para restringir acceso si es necesario
        - IpProtocol: "tcp"
          FromPort: 53
          ToPort: 53
          CidrIp: "8.8.8.8/0"  # Cambia esto para restringir acceso si es necesario
  